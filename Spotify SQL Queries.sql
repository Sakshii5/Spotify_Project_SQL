
#1. What are the total sales and revenue generated by each artist?
WITH cte AS (
    SELECT il.unit_price,il.quantity,ar.artist_id,ar.name
    FROM invoice_line il
    INNER JOIN track t ON il.track_id = t.track_id
    INNER JOIN album a ON t.album_id = a.album_id
    INNER JOIN artist ar ON a.artist_id = ar.artist_id
)
select name,round(sum(unit_price*quantity),2) as total_revenue from cte group by name;

#2. Which albums have generated the highest revenue(Top 5)?
# USING CTE
WITH revenue_cte AS (
    SELECT 
        a.title,
        ROUND(SUM(il.unit_price * il.quantity), 2) AS Total_Revenue
    FROM invoice_line il
    INNER JOIN track t ON il.track_id = t.track_id
    INNER JOIN album a ON t.album_id = a.album_id
    GROUP BY a.title
)
SELECT title FROM revenue_cte ORDER BY Total_Revenue DESC LIMIT 5;

#USING SUBQUERY
SELECT 
    title
FROM (
    SELECT 
        a.title,
        ROUND(SUM(il.unit_price * il.quantity), 2) AS Total_Revenue
    FROM invoice_line il
    INNER JOIN track t ON il.track_id = t.track_id
    INNER JOIN album a ON t.album_id = a.album_id
    GROUP BY a.title
    ORDER BY Total_Revenue DESC
    LIMIT 5
) AS top_revenue_titles;

#3. Which genres contribute most to revenue(Top 5)?
#USING CTE
with genre_revenue_cte as (select g.name,round(sum(il.unit_price*il.quantity)) as total_revenue from invoice_line il
INNER JOIN track t ON il.track_id = t.track_id
    INNER JOIN genre g on t.genre_id=g.genre_id group by g.name)
select name from genre_revenue_cte order by total_revenue desc limit 5;

#USING SUBQUERY
Select name from(
select g.name,round(sum(il.unit_price*il.quantity)) as total_revenue from invoice_line il
INNER JOIN track t ON il.track_id = t.track_id
    INNER JOIN genre g on t.genre_id=g.genre_id group by g.name order by total_revenue desc limit 5) as top_5_genre;

#4. What is the trend of sales over time (yearly)?
SELECT year(invoice_date) AS Year ,round(sum(total),2) as Total_Revenue
FROM invoice group by YEAR;

#5. What is the trend of sales over time (yearly and monthly)?
select year(invoice_date) as Year,date_format(invoice_date,'%M') as month_name, round(sum(total),2) 
from invoice group by Year,month_name;

#6. Which customers have made the most purchases(top 5)?
select c.customer_id,concat(c.first_name,' ',c.last_name) as name, round(sum(i.total),2) as total_purchase from customer c inner join invoice i on c.customer_id=i.customer_id 
group by c.customer_id,name order by total_purchase desc limit 5;

#7. Highest grossing city in each country?
with cte as (select billing_city,billing_country , sum(total) as total from invoice group by billing_city,billing_country)
select billing_city,billing_country from(select billing_city,billing_country, dense_rank() over(partition by billing_country order by total desc) as rnk from cte) as cte2 where rnk=1;

#8. Popular genre in each city of each country
with cte as (select g.name, i.billing_city, i.billing_country,round(sum(i.total),2) as total from genre g inner join track t on g.genre_id=t.genre_id
inner join invoice_line il on t.track_id=il.track_id
inner join invoice i on il.invoice_id=i.invoice_id
group by g.name,i.billing_city,i.billing_country)
select name,billing_city, billing_country from (select * , rank() over(partition by billing_city,billing_country order by total desc) as rnk from cte ) as cte2 where rnk=1;

#9. Which tracks are the most purchased or streamed?
select t.track_id, t.name, round(sum(il.unit_price*il.quantity),2) as purchase from track t inner join invoice_line il on 
t.track_id=il.track_id group by t.track_id,t.name order by purchase desc limit 5;

#10.Which employee has generated the highest total invoice amount?
select round(sum(i.total),2) as amount,e.employee_id,e.first_name
from invoice i inner join customer c on i.customer_id=c.customer_id
inner join employee e on c.support_rep_id=e.employee_id
group by e.employee_id,e.first_name order by amount desc limit 1;

#11. What is the total revenue generated by each employee?
select round(sum(i.total),2) as amount,e.employee_id,e.first_name
from invoice i inner join customer c on i.customer_id=c.customer_id
inner join employee e on c.support_rep_id=e.employee_id
group by e.employee_id,e.first_name order by amount desc;

#12. What is the number of invoices per customer?
select CONCAT(c.first_name," ",c.last_name) as name, count(*) as total_no_of_invoices from 
customer c inner join invoice i on c.customer_id=i.customer_id
group by name order by total_no_of_invoices desc;

#13 Which city has the highest number of customers?
SELECT City,COUNT(Customer_Id) AS CustomerCount FROM Customer GROUP BY City ORDER BY CustomerCount DESC LIMIT 1;

#14 Which tracks are the most sold, and how many times were they purchased?
SELECT t.Name AS TrackName,COUNT(il.Invoice_Line_Id) AS PurchaseCount FROM Invoice_Line il JOIN Track t ON il.Track_Id = t.Track_Id
GROUP BY t.Name ORDER BY PurchaseCount DESC;

#15 Which artists have the most tracks in the library?
SELECT ar.Name AS ArtistName, COUNT(t.Track_Id) AS TrackCount FROM Artist ar
JOIN
    Album al ON ar.Artist_Id = al.Artist_Id
JOIN
    Track t ON al.Album_Id = t.Album_Id
GROUP BY
    ar.Name
ORDER BY
    TrackCount DESC;
    
#16 Which employees are interesting the most customers?
SELECT
    e.Employee_Id,
    concat(e.first_name,' ',e.last_name) AS EmployeeName,
    COUNT(c.Customer_Id) AS CustomerCount
FROM
    Employee e
LEFT JOIN
    Customer c ON e.Employee_Id = c.Support_Rep_Id
GROUP BY
    e.Employee_Id,
    EmployeeName
ORDER BY
    CustomerCount DESC;











